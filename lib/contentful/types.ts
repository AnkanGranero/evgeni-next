export type RawAsset = {
  sys: { id: string };
  fields: {
    title?: string;
    description?: string;
    file: {
      url: string;
      details?: { image?: { width: number; height: number } };
    };
  };
};

export type CFImageFile = {
  fields: {
    file: {
      details: AssetDetails;
      url: string;
    };
    title: string;
  };
};

export type CFAsset = {
  fields: {
    title: string;
    description: string;
    file: CFImageFile;
  };
};

//generated by contentful
import type { AssetDetails, ChainModifiers, Entry, EntryFieldTypes, EntrySkeletonType, LocaleCode } from "contentful";

export interface TypeAndreasHeaderLinksFields {
    name?: EntryFieldTypes.Symbol;
    image: EntryFieldTypes.AssetLink;
    url: EntryFieldTypes.Symbol;
}

export type TypeAndreasHeaderLinksSkeleton = EntrySkeletonType<TypeAndreasHeaderLinksFields, "andreasHeaderLinks">;
export type TypeAndreasHeaderLinks<Modifiers extends ChainModifiers, Locales extends LocaleCode = LocaleCode> = Entry<TypeAndreasHeaderLinksSkeleton, Modifiers, Locales>;

export interface TypeAndreasPortfolioFields {
    picture: EntryFieldTypes.AssetLink;
    order?: EntryFieldTypes.Integer;
    name?: EntryFieldTypes.Symbol;
}

export type TypeAndreasPortfolioSkeleton = EntrySkeletonType<TypeAndreasPortfolioFields, "andreasPortfolio">;
export type TypeAndreasPortfolio<Modifiers extends ChainModifiers, Locales extends LocaleCode = LocaleCode> = Entry<TypeAndreasPortfolioSkeleton, Modifiers, Locales>;

export interface TypeCvitemFields {
    category?: EntryFieldTypes.Symbol<"Dokumentär" | "Extrajobb" | "Kontakt" | "Musik" | "Radioteater" | "Regi" | "Teater" | "Tolk" | "Tv och film" | "Utbildning" | "Övrigt">;
    text?: EntryFieldTypes.RichText;
    orderNumber?: EntryFieldTypes.Integer;
}

export type TypeCvitemSkeleton = EntrySkeletonType<TypeCvitemFields, "cvitem">;
export type TypeCvitem<Modifiers extends ChainModifiers, Locales extends LocaleCode = LocaleCode> = Entry<TypeCvitemSkeleton, Modifiers, Locales>;

export interface TypeGalleryImageFields {
    image: EntryFieldTypes.AssetLink;
    orderNumber?: EntryFieldTypes.Integer;
    name?: EntryFieldTypes.Symbol;
}

export type TypeGalleryImageSkeleton = EntrySkeletonType<TypeGalleryImageFields, "galleryImage">;
export type TypeGalleryImage<Modifiers extends ChainModifiers, Locales extends LocaleCode = LocaleCode> = Entry<TypeGalleryImageSkeleton, Modifiers, Locales>;

export interface TypeHeaderMenuLinkFields {
    name?: EntryFieldTypes.Symbol;
    image: EntryFieldTypes.AssetLink;
    link?: EntryFieldTypes.RichText;
}

export type TypeHeaderMenuLinkSkeleton = EntrySkeletonType<TypeHeaderMenuLinkFields, "headerMenuLink">;
export type TypeHeaderMenuLink<Modifiers extends ChainModifiers, Locales extends LocaleCode = LocaleCode> = Entry<TypeHeaderMenuLinkSkeleton, Modifiers, Locales>;

export interface TypeMediaItemFields {
    name: EntryFieldTypes.Symbol;
    type: EntryFieldTypes.Array<EntryFieldTypes.Symbol<"Actor" | "Director" | "Music">>;
    site?: EntryFieldTypes.Symbol<"Vimeo" | "Youtube">;
    link?: EntryFieldTypes.Symbol;
    date?: EntryFieldTypes.Date;
    image?: EntryFieldTypes.AssetLink;
}

export type TypeMediaItemSkeleton = EntrySkeletonType<TypeMediaItemFields, "mediaItem">;
export type TypeMediaItem<Modifiers extends ChainModifiers, Locales extends LocaleCode = LocaleCode> = Entry<TypeMediaItemSkeleton, Modifiers, Locales>;

export interface TypeNavLinkFields {
    name: EntryFieldTypes.Symbol;
    image: EntryFieldTypes.AssetLink;
    link: EntryFieldTypes.Symbol;
}

export type TypeNavLinkSkeleton = EntrySkeletonType<TypeNavLinkFields, "navLink">;
export type TypeNavLink<Modifiers extends ChainModifiers, Locales extends LocaleCode = LocaleCode> = Entry<TypeNavLinkSkeleton, Modifiers, Locales>;

export interface TypeNavLinkCircleFields {
    name: EntryFieldTypes.Symbol;
    link: EntryFieldTypes.Symbol;
    icon: EntryFieldTypes.AssetLink;
}

export type TypeNavLinkCircleSkeleton = EntrySkeletonType<TypeNavLinkCircleFields, "navLinkCircle">;
export type TypeNavLinkCircle<Modifiers extends ChainModifiers, Locales extends LocaleCode = LocaleCode> = Entry<TypeNavLinkCircleSkeleton, Modifiers, Locales>;

export interface TransformedNewsItem {
  id: string;
  image?: EntryFieldTypes.AssetLink;
  body?: EntryFieldTypes.RichText;
}

export type ImageObject = {
  url: string;
  description: string | undefined;
  dimensions:
    | {
        width: number;
        height: number;
      }
    | undefined;
  id: string;
  title: string | undefined;
  thumbUrl: string;
  fullUrl: string;
  blurUrl: string;
};





